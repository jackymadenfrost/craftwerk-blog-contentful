{"ast":null,"code":"var _jsxFileName = \"/Users/chusyjacky/Documents/GitHub/craftwerk-blog-contentful/src/component/BlogPost.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport * as Markdown from \"react-markdown\";\nimport ContentfulUtil from \"../utils/ContentfulUtil\";\n\nclass BlogPost extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      date: \"\",\n      title: \"\",\n      featuredImage: \"\",\n      content: \"\"\n    };\n\n    this.setPost = post => {\n      if (post && post.items.length) {\n        this.setState({\n          date: post.items[0].fields.date,\n          title: post.items[0].fields.title,\n          featuredImage: post.items[0].fields.featuredImage,\n          content: post.items[0].fields.content\n        });\n      }\n\n      console.log(post);\n    };\n\n    this.isBlogPostInProps = () => this.props && this.props.location && this.props.location.date && this.props.location.title && this.props.location.featuredImage && this.props.location.content;\n\n    this.isBlogPostLoaded = () => this.state && this.state.date && this.state.title && this.state.featuredImage && this.state.content;\n\n    this.renderBlogPost = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: \"/blog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Back to Blog\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, moment(this.state.date).calendar(null, {\n      sameDay: \"[Today]\",\n      lastDay: \"[Yesterday]\",\n      lastWeek: \"[Last] dddd\",\n      sameElse: \"MMM Do YYYY\"\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.featuredImage.fields.file.url,\n      style: {\n        maxHeight: 200\n      },\n      alt: this.state.featuredImage.fields.description,\n      title: this.state.featuredImage.fields.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, this.state.title), /*#__PURE__*/React.createElement(Markdown, {\n      source: this.state.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }));\n\n    this.render = () => {\n      return this.isBlogPostLoaded() ? this.renderBlogPost() : \"Loading...\";\n    };\n  }\n\n  componentDidMount() {\n    if (this.isBlogPostInProps()) {\n      this.setState({\n        date: this.props.location.date,\n        title: this.props.location.title,\n        featuredImage: this.props.location.featuredImage,\n        content: this.props.location.content\n      });\n    } else {\n      ContentfulUtil.fetchPostByPathName(this.props.match.params.blogPost).then(response => this.setPost(response));\n    }\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["/Users/chusyjacky/Documents/GitHub/craftwerk-blog-contentful/src/component/BlogPost.js"],"names":["React","Link","moment","Markdown","ContentfulUtil","BlogPost","Component","state","date","title","featuredImage","content","setPost","post","items","length","setState","fields","console","log","isBlogPostInProps","props","location","isBlogPostLoaded","renderBlogPost","calendar","sameDay","lastDay","lastWeek","sameElse","file","url","maxHeight","description","render","componentDidMount","fetchPostByPathName","match","params","blogPost","then","response"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport * as Markdown from \"react-markdown\";\nimport ContentfulUtil from \"../utils/ContentfulUtil\";\n\nclass BlogPost extends React.Component {\n  state = {\n    date: \"\",\n    title: \"\",\n    featuredImage: \"\",\n    content: \"\",\n  };\n\n  setPost = post => {\n    if (post && post.items.length) {\n      this.setState({\n        date: post.items[0].fields.date,\n        title: post.items[0].fields.title,\n        featuredImage: post.items[0].fields.featuredImage,\n        content: post.items[0].fields.content,\n      });\n    }\n    console.log(post);\n  };\n\n  componentDidMount() {\n    if (this.isBlogPostInProps()) {\n      this.setState({\n        date: this.props.location.date,\n        title: this.props.location.title,\n        featuredImage: this.props.location.featuredImage,\n        content: this.props.location.content,\n      });\n    } else {\n      ContentfulUtil.fetchPostByPathName(\n        this.props.match.params.blogPost,\n      ).then(response => this.setPost(response));\n    }\n  }\n\n  isBlogPostInProps = () =>\n    this.props &&\n    this.props.location &&\n    this.props.location.date &&\n    this.props.location.title &&\n    this.props.location.featuredImage &&\n    this.props.location.content;\n\n  isBlogPostLoaded = () =>\n    this.state &&\n    this.state.date &&\n    this.state.title &&\n    this.state.featuredImage &&\n    this.state.content;\n\n  renderBlogPost = () => (\n    <>\n      <Link to=\"/blog\">Back to Blog</Link>\n      <p>\n        {moment(this.state.date).calendar(null, {\n          sameDay: \"[Today]\",\n          lastDay: \"[Yesterday]\",\n          lastWeek: \"[Last] dddd\",\n          sameElse: \"MMM Do YYYY\",\n        })}\n      </p>\n      <img\n        src={this.state.featuredImage.fields.file.url}\n        style={{ maxHeight: 200 }}\n        alt={this.state.featuredImage.fields.description}\n        title={this.state.featuredImage.fields.title}\n      />\n\n      <h1>{this.state.title}</h1>\n      <Markdown source={this.state.content} />\n    </>\n  );\n\n  render = () => {\n    return this.isBlogPostLoaded() ? this.renderBlogPost() : \"Loading...\";\n  };\n}\n\nexport default BlogPost;\n"]},"metadata":{},"sourceType":"module"}